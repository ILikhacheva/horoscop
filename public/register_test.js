// register.js
/*document.addEventListener("DOMContentLoaded", function () {
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è select –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞
  if (typeof fillZodiacSelect === "function") {
    fillZodiacSelect("zodiac"); // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  }
  const registerForm = document.getElementById("registerForm");

  // –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –ø–æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è
  document.getElementById("birthday").addEventListener("change", function () {
    const zodiac = getZodiacSignFromString(this.value);
    if (zodiac) {
      document.getElementById("zodiac").value = zodiac;
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞ –≤—Ä—É—á–Ω—É—é
  document.getElementById("zodiac").addEventListener("change", function () {
    // –ü—Ä–æ—Å—Ç–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥
    // console.log('–í—ã–±—Ä–∞–Ω –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞:', this.value);
    // –ó–Ω–∞—á–µ–Ω–∏–µ select –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–º —á–µ—Ä–µ–∑ .value
  });

  const birthdayInput = document.getElementById("birthday");
  const zodiacInput = document.getElementById("zodiac");
  const noBirthdayCheckbox = document.getElementById("noBirthday");
  if (birthdayInput) {
    const today = new Date().toISOString().split("T")[0];
    birthdayInput.setAttribute("max", today);
  }

  // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ required –¥–ª—è birthday/zodiac
  if (noBirthdayCheckbox && birthdayInput && zodiacInput) {
    let lastNoBirthdayState = noBirthdayCheckbox.checked;
    function updateRequiredFields() {
      const nowNoBirthday = noBirthdayCheckbox.checked;
      if (nowNoBirthday) {
        birthdayInput.removeAttribute("required");
        zodiacInput.setAttribute("required", "required");
        zodiacInput.parentElement.style.display = "block";
        if (typeof fillZodiacSelect === "function") fillZodiacSelect("zodiac");
        // –°–±—Ä–æ—Å–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤–∫–ª—é—á–∏–ª–∏ —á–µ–∫–±–æ–∫—Å
        if (!lastNoBirthdayState) {
          zodiacInput.value = "";
        }
        zodiacInput.focus();
      } else {
        birthdayInput.setAttribute("required", "required");
        zodiacInput.removeAttribute("required");
        zodiacInput.value = "";
        zodiacInput.parentElement.style.display = "none";
      }
      lastNoBirthdayState = nowNoBirthday;
    }
    noBirthdayCheckbox.addEventListener("change", updateRequiredFields);
    updateRequiredFields();
  }

  registerForm.addEventListener("submit", async function (e) {
    e.preventDefault();

    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
    clearErrors();

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!validateForm()) {
      return;
    }

    const noBirthday = document.getElementById("noBirthday")?.checked;
    const birthdayValue = document.getElementById("birthday").value;
    const zodiacValue = document.getElementById("zodiac").value;
    const formData = {
      email: document.getElementById("registerEmail").value.trim(),
      name: document.getElementById("registerName").value.trim(),
      birthday: noBirthday ? "" : birthdayValue,
      zodiac:
        zodiacValue ||
        (birthdayValue ? getZodiacSignFromString(birthdayValue) : ""),
      password: document.getElementById("registerPassword").value,
    };
    console.log("üìù –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", formData);

    try {
      console.log("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");
      const response = await fetch("/api/register", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      console.log("üì° –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.status);
      const result = await response.json();
      console.log("üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç:", result);

      if (result.success) {
        console.log("‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!");
        showSuccess(
          "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É..."
        );
        setTimeout(() => {
          window.location.href = "/";
        }, 2000);
      } else {
        console.log("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", result.message);
        showError("generalError", result.message || "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", error);
      showError("generalError", "–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º");
    }
  });
});

function validateForm() {
  let isValid = true;

  const noBirthday = document.getElementById("noBirthday")?.checked;
  const birthdayInput = document.getElementById("birthday");
  const birthday = birthdayInput ? birthdayInput.value : "";
  const zodiac = document.getElementById("zodiac").value;
  const email = document.getElementById("registerEmail").value.trim();
  const name = document.getElementById("registerName").value.trim();
  const password = document.getElementById("registerPassword").value;
  // –í —Ñ–æ—Ä–º–µ –Ω–µ—Ç –ø–æ–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
  // const confirmPassword = document.getElementById("registerConfirmPassword")?.value;

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–µ –≤ –±—É–¥—É—â–µ–º)
  if (!noBirthday && birthdayInput) {
    const today = new Date().toISOString().split("T")[0];
    if (birthday > today) {
      document.getElementById("registerGeneralError").textContent =
        "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º.";
      document.getElementById("registerGeneralError").style.display = "block";
      return false;
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ email
  if (!email || !isValidEmail(email)) {
    showError("emailError", "Please enter a valid email");
    isValid = false;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏
  if (!name || name.length < 2) {
    showError("nameError", "Name must be at least 2 characters long");
    isValid = false;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è/–∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
  if (noBirthday) {
    // –ï—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏–º —É–∫–∞–∑—ã–≤–∞—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, zodiac –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
    if (!zodiac) {
      showError("zodiacError", "Please select your zodiac sign");
      isValid = false;
    }
  } else {
    // –ï—Å–ª–∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞
    if (!birthday) {
      showError("birthdayError", "Please select your birth date");
      isValid = false;
    } else {
      const birthDate = new Date(birthday);
      const today = new Date();
      const age = today.getFullYear() - birthDate.getFullYear();
      if (age < 1 || age > 120) {
        showError("birthdayError", "Invalid birth date");
        isValid = false;
      }
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
  if (!password || password.length < 6) {
    showError("passwordError", "Password must be at least 6 characters long");
    isValid = false;
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–≤—Ç–æ—Ä–∞ –ø–∞—Ä–æ–ª—è
  const confirmPassword = document.getElementById(
    "registerConfirmPassword"
  )?.value;
  if (password !== confirmPassword) {
    showError("confirmPasswordError", "Passwords do not match");
    isValid = false;
  }

  return isValid;
}

function cancelRegistration() {
  window.location.href = "/";
}
*/
